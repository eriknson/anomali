"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = require("../../common/styled-components");

var _components = require("./components");

var _defaultSettings = require("../../../constants/default-settings");

var _userGuides = require("../../../constants/user-guides");

var _styledComponents2 = _interopRequireDefault(require("styled-components"));

var _reactIntl = require("react-intl");

function _templateObject3() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  height: unset;\n  width: unset;\n  img {\n    width: 180px;\n    height: 120px;\n  }\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  width: 100%;\n  padding: ", ";\n  color: ", ";\n  height: ", ";\n  outline: 0;\n  font-size: ", ";\n\n  :active,\n  :focus,\n  &.focus,\n  &.active {\n    outline: 0;\n  }\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n  .disclaimer {\n    font-size: ", ";\n    color: ", ";\n    margin-top: 12px;\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var NO_OP = function NO_OP() {};

var ExportMapStyledExportSection = (0, _styledComponents2["default"])(_styledComponents.StyledExportSection)(_templateObject(), function (props) {
  return props.theme.inputFontSize;
}, function (props) {
  return props.theme.inputColor;
});

var StyledInput = _styledComponents2["default"].input(_templateObject2(), function (props) {
  return props.theme.inputPadding;
}, function (props) {
  return props.error ? 'red' : props.theme.titleColorLT;
}, function (props) {
  return props.theme.inputBoxHeight;
}, function (props) {
  return props.theme.inputFontSize;
});

var BigStyledTile = (0, _styledComponents2["default"])(_styledComponents.StyledType)(_templateObject3());
var exportHtmlPropTypes = {
  options: _propTypes["default"].object,
  onEditUserMapboxAccessToken: _propTypes["default"].func.isRequired
};

var ExportHtmlMap = _react["default"].memo(function (_ref) {
  var _ref$onChangeExportMa = _ref.onChangeExportMapHTMLMode,
      onChangeExportMapHTMLMode = _ref$onChangeExportMa === void 0 ? NO_OP : _ref$onChangeExportMa,
      _ref$onEditUserMapbox = _ref.onEditUserMapboxAccessToken,
      onEditUserMapboxAccessToken = _ref$onEditUserMapbox === void 0 ? NO_OP : _ref$onEditUserMapbox,
      _ref$options = _ref.options,
      options = _ref$options === void 0 ? {} : _ref$options,
      intl = _ref.intl;
  return _react["default"].createElement("div", null, _react["default"].createElement(_components.StyledExportMapSection, null, _react["default"].createElement("div", {
    className: "description"
  }), _react["default"].createElement("div", {
    className: "selection"
  }, _react["default"].createElement(_reactIntl.FormattedMessage, {
    id: 'modal.exportMap.html.selection'
  }))), _react["default"].createElement(ExportMapStyledExportSection, {
    className: "export-map-modal__html-options"
  }, _react["default"].createElement("div", {
    className: "description"
  }, _react["default"].createElement("div", {
    className: "title"
  }, _react["default"].createElement(_reactIntl.FormattedMessage, {
    id: 'modal.exportMap.html.tokenTitle'
  })), _react["default"].createElement("div", {
    className: "subtitle"
  }, _react["default"].createElement(_reactIntl.FormattedMessage, {
    id: 'modal.exportMap.html.tokenSubtitle'
  }))), _react["default"].createElement("div", {
    className: "selection"
  }, _react["default"].createElement(StyledInput, {
    onChange: function onChange(e) {
      return onEditUserMapboxAccessToken(e.target.value);
    },
    type: "text",
    placeholder: intl.formatMessage({
      id: 'modal.exportMap.html.tokenPlaceholder'
    }),
    value: options ? options.userMapboxToken : ''
  }), _react["default"].createElement("div", {
    className: "disclaimer"
  }, _react["default"].createElement(_components.StyledWarning, null, _react["default"].createElement(_reactIntl.FormattedMessage, {
    id: 'modal.exportMap.html.tokenMisuseWarning'
  })), _react["default"].createElement(_reactIntl.FormattedMessage, {
    id: 'modal.exportMap.html.tokenDisclaimer'
  }), _react["default"].createElement(_components.ExportMapLink, {
    href: _userGuides.GITHUB_EXPORT_HTML_MAP
  }, _react["default"].createElement(_reactIntl.FormattedMessage, {
    id: 'modal.exportMap.html.tokenUpdate'
  }))))), _react["default"].createElement(ExportMapStyledExportSection, null, _react["default"].createElement("div", {
    className: "description"
  }, _react["default"].createElement("div", {
    className: "title"
  }, _react["default"].createElement(_reactIntl.FormattedMessage, {
    id: 'modal.exportMap.html.modeTitle'
  })), _react["default"].createElement("div", {
    className: "subtitle"
  }, _react["default"].createElement(_reactIntl.FormattedMessage, {
    id: 'modal.exportMap.html.modeSubtitle1'
  }), _react["default"].createElement("a", {
    href: _userGuides.GITHUB_EXPORT_HTML_MAP_MODES
  }, _react["default"].createElement(_reactIntl.FormattedMessage, {
    id: 'modal.exportMap.html.modeSubtitle2'
  })))), _react["default"].createElement("div", {
    className: "selection"
  }, _defaultSettings.EXPORT_HTML_MAP_MODE_OPTIONS.map(function (mode) {
    return _react["default"].createElement(BigStyledTile, {
      key: mode.id,
      selected: options.mode === mode.id,
      available: mode.available,
      onClick: function onClick() {
        return mode.available && onChangeExportMapHTMLMode(mode.id);
      }
    }, _react["default"].createElement("img", {
      src: mode.url,
      alt: ""
    }), _react["default"].createElement("p", null, _react["default"].createElement(_reactIntl.FormattedMessage, {
      id: 'modal.exportMap.html.modeDescription',
      values: {
        mode: intl.formatMessage({
          id: mode.label
        })
      }
    })));
  }))));
});

ExportHtmlMap.propTypes = exportHtmlPropTypes;
ExportHtmlMap.displayName = 'ExportHtmlMap';

var ExportHtmlMapFactory = function ExportHtmlMapFactory() {
  return (0, _reactIntl.injectIntl)(ExportHtmlMap);
};

var _default = ExportHtmlMapFactory;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,